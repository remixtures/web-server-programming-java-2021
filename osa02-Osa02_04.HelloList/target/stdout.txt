22:02:53.951 [TestRunner thread] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class hellolist.HelloListTest]
22:02:53.961 [TestRunner thread] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
22:02:53.979 [TestRunner thread] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
22:02:54.063 [TestRunner thread] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [hellolist.HelloListTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
22:02:54.079 [TestRunner thread] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [hellolist.HelloListTest], using SpringBootContextLoader
22:02:54.085 [TestRunner thread] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [hellolist.HelloListTest]: class path resource [hellolist/HelloListTest-context.xml] does not exist
22:02:54.086 [TestRunner thread] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [hellolist.HelloListTest]: class path resource [hellolist/HelloListTestContext.groovy] does not exist
22:02:54.086 [TestRunner thread] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [hellolist.HelloListTest]: no resource found for suffixes {-context.xml, Context.groovy}.
22:02:54.087 [TestRunner thread] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [hellolist.HelloListTest]: HelloListTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
22:02:54.184 [TestRunner thread] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [hellolist.HelloListTest]
22:02:54.245 [TestRunner thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/miguel/NetBeansProjects/mooc-wepa-21/osa02-Osa02_04.HelloList/target/classes/hellolist/HelloListApplication.class]
22:02:54.259 [TestRunner thread] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration hellolist.HelloListApplication for test class hellolist.HelloListTest
22:02:54.368 [TestRunner thread] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [hellolist.HelloListTest]: using defaults.
22:02:54.368 [TestRunner thread] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
22:02:54.382 [TestRunner thread] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/TransactionDefinition]
22:02:54.383 [TestRunner thread] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]
22:02:54.383 [TestRunner thread] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33fdcd75, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6e2c04a9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4b2d4cf6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@26873606, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7bccd1c6, org.springframework.test.context.event.EventPublishingTestExecutionListener@75cb9b5a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@54a023e9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4b08187d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5657a23b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7f6fe2e0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2a85298f, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@21c50752]
22:02:54.387 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [hellolist.HelloListTest]
22:02:54.388 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [hellolist.HelloListTest]
22:02:54.397 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [hellolist.HelloListTest]
22:02:54.398 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [hellolist.HelloListTest]
22:02:54.408 [TestRunner thread] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4488c827 testClass = HelloListTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1bde020e testClass = HelloListTest, locations = '{}', classes = '{class hellolist.HelloListApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6071dfc key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@333f285e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3e1f1d69, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7dc5c2ae, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1abcc745, org.springframework.boot.test.context.SpringBootTestArgs@1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
22:02:54.410 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [hellolist.HelloListTest]
22:02:54.410 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [hellolist.HelloListTest]
22:02:54.438 [TestRunner thread] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.3.2.RELEASE)

2021-04-25 22:02:54.839  INFO 1680 --- [stRunner thread] hellolist.HelloListTest                  : Starting HelloListTest on miguel-ThinkPad-X220 with PID 1680 (started by miguel in /home/miguel/NetBeansProjects/mooc-wepa-21/osa02-Osa02_04.HelloList)
2021-04-25 22:02:54.841  INFO 1680 --- [stRunner thread] hellolist.HelloListTest                  : No active profile set, falling back to default profiles: default
2021-04-25 22:02:56.115  INFO 1680 --- [stRunner thread] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-04-25 22:02:56.206  INFO 1680 --- [stRunner thread] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-04-25 22:02:56.557  INFO 1680 --- [stRunner thread] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2021-04-25 22:02:56.558  INFO 1680 --- [stRunner thread] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2021-04-25 22:02:56.571  INFO 1680 --- [stRunner thread] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 13 ms
2021-04-25 22:02:56.595  INFO 1680 --- [stRunner thread] hellolist.HelloListTest                  : Started HelloListTest in 2.145 seconds (JVM running for 3.151)

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-.]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Hello List!</title>
    </head>

    <body>
        <h1>Hello List!</h1>

        <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
        <ul>
            <li>Hello world!</li>
        </ul>
        <ul>
            <li>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</li>
        </ul>

        <!-- Älä koske alla olevaan lomakkeeseen, tutustumme 
        tiedon lisäämiseen hieman myöhemmin -->
        <h2>Add content to list</h2>

        <form action="/" method="POST">
            <input type="text" name="content"/>
            <input type="submit" value="Click!"/>
        </form>
    </body>
</html>

    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Hello List!</title>
    </head>

    <body>
        <h1>Hello List!</h1>

        <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
        <ul>
            <li>Hello world!</li>
        </ul>
        <ul>
            <li>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</li>
        </ul>
        <ul>
            <li>Abracadabra</li>
        </ul>

        <!-- Älä koske alla olevaan lomakkeeseen, tutustumme 
        tiedon lisäämiseen hieman myöhemmin -->
        <h2>Add content to list</h2>

        <form action="/" method="POST">
            <input type="text" name="content"/>
            <input type="submit" value="Click!"/>
        </form>
    </body>
</html>

    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Hello List!</title>
    </head>

    <body>
        <h1>Hello List!</h1>

        <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
        <ul>
            <li>Hello world!</li>
        </ul>
        <ul>
            <li>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</li>
        </ul>
        <ul>
            <li>Abracadabra</li>
        </ul>
        <ul>
            <li>Alakazam</li>
        </ul>

        <!-- Älä koske alla olevaan lomakkeeseen, tutustumme 
        tiedon lisäämiseen hieman myöhemmin -->
        <h2>Add content to list</h2>

        <form action="/" method="POST">
            <input type="text" name="content"/>
            <input type="submit" value="Click!"/>
        </form>
    </body>
</html>

    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam, Bibbidi-Bobbidi-Boo]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Hello List!</title>
    </head>

    <body>
        <h1>Hello List!</h1>

        <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
        <ul>
            <li>Hello world!</li>
        </ul>
        <ul>
            <li>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</li>
        </ul>
        <ul>
            <li>Abracadabra</li>
        </ul>
        <ul>
            <li>Alakazam</li>
        </ul>
        <ul>
            <li>Bibbidi-Bobbidi-Boo</li>
        </ul>

        <!-- Älä koske alla olevaan lomakkeeseen, tutustumme 
        tiedon lisäämiseen hieman myöhemmin -->
        <h2>Add content to list</h2>

        <form action="/" method="POST">
            <input type="text" name="content"/>
            <input type="submit" value="Click!"/>
        </form>
    </body>
</html>

    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam, Bibbidi-Bobbidi-Boo, By the Power of Grayskull, I HAVE THE POWER]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Hello List!</title>
    </head>

    <body>
        <h1>Hello List!</h1>

        <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
        <ul>
            <li>Hello world!</li>
        </ul>
        <ul>
            <li>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</li>
        </ul>
        <ul>
            <li>Abracadabra</li>
        </ul>
        <ul>
            <li>Alakazam</li>
        </ul>
        <ul>
            <li>Bibbidi-Bobbidi-Boo</li>
        </ul>
        <ul>
            <li>By the Power of Grayskull, I HAVE THE POWER</li>
        </ul>

        <!-- Älä koske alla olevaan lomakkeeseen, tutustumme 
        tiedon lisäämiseen hieman myöhemmin -->
        <h2>Add content to list</h2>

        <form action="/" method="POST">
            <input type="text" name="content"/>
            <input type="submit" value="Click!"/>
        </form>
    </body>
</html>

    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam, Bibbidi-Bobbidi-Boo, By the Power of Grayskull, I HAVE THE POWER, Open sesame]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Hello List!</title>
    </head>

    <body>
        <h1>Hello List!</h1>

        <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
        <ul>
            <li>Hello world!</li>
        </ul>
        <ul>
            <li>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</li>
        </ul>
        <ul>
            <li>Abracadabra</li>
        </ul>
        <ul>
            <li>Alakazam</li>
        </ul>
        <ul>
            <li>Bibbidi-Bobbidi-Boo</li>
        </ul>
        <ul>
            <li>By the Power of Grayskull, I HAVE THE POWER</li>
        </ul>
        <ul>
            <li>Open sesame</li>
        </ul>

        <!-- Älä koske alla olevaan lomakkeeseen, tutustumme 
        tiedon lisäämiseen hieman myöhemmin -->
        <h2>Add content to list</h2>

        <form action="/" method="POST">
            <input type="text" name="content"/>
            <input type="submit" value="Click!"/>
        </form>
    </body>
</html>

    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam, Bibbidi-Bobbidi-Boo, By the Power of Grayskull, I HAVE THE POWER, Open sesame, Shazam]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Hello List!</title>
    </head>

    <body>
        <h1>Hello List!</h1>

        <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
        <ul>
            <li>Hello world!</li>
        </ul>
        <ul>
            <li>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</li>
        </ul>
        <ul>
            <li>Abracadabra</li>
        </ul>
        <ul>
            <li>Alakazam</li>
        </ul>
        <ul>
            <li>Bibbidi-Bobbidi-Boo</li>
        </ul>
        <ul>
            <li>By the Power of Grayskull, I HAVE THE POWER</li>
        </ul>
        <ul>
            <li>Open sesame</li>
        </ul>
        <ul>
            <li>Shazam</li>
        </ul>

        <!-- Älä koske alla olevaan lomakkeeseen, tutustumme 
        tiedon lisäämiseen hieman myöhemmin -->
        <h2>Add content to list</h2>

        <form action="/" method="POST">
            <input type="text" name="content"/>
            <input type="submit" value="Click!"/>
        </form>
    </body>
</html>

    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2021-04-25 22:02:57.960  INFO 1680 --- [extShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
